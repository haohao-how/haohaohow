diff --git a/lib/module/createAnimatedComponent/createAnimatedComponent.js b/lib/module/createAnimatedComponent/createAnimatedComponent.js
index ab01cb6427e0d25144e3d0eb51c5fcf28dc755ad..505891a7375046150b851b9e04e4c96e45e1c56c 100644
--- a/lib/module/createAnimatedComponent/createAnimatedComponent.js
+++ b/lib/module/createAnimatedComponent/createAnimatedComponent.js
@@ -109,6 +109,16 @@ export function createAnimatedComponent(Component, options) {
       if (layout) {
         this._configureLayoutTransition();
       }
+      {
+        // In the case where the component was unmounted and had an exit animation,
+        // move back the elements that were moved into the dummy element.
+        const dummyRef = this._componentDOMRef.reanimatedDummyRef;
+        dummyRef?.getAnimations().forEach(x => x.cancel());
+        while (dummyRef?.firstChild) {
+          this._componentDOMRef.appendChild(dummyRef.firstChild);
+        }
+        this._componentDOMRef.reanimatedDummyRef = null;
+      }
       if (IS_WEB) {
         if (this.props.exiting && this._componentDOMRef) {
           saveSnapshot(this._componentDOMRef);
diff --git a/lib/module/layoutReanimation/web/componentUtils.js b/lib/module/layoutReanimation/web/componentUtils.js
index c3623f90862b4413ce6d77bb04496ad2fecb3125..16a6a13525ac88d4c295840620b032117c60a6d6 100644
--- a/lib/module/layoutReanimation/web/componentUtils.js
+++ b/lib/module/layoutReanimation/web/componentUtils.js
@@ -218,6 +218,7 @@ export function handleExitingAnimation(element, animationConfig) {
   const parent = element.offsetParent;
   const dummy = element.cloneNode();
   dummy.reanimatedDummy = true;
+  element.reanimatedDummyRef = dummy;
   element.style.animationName = '';
   dummy.style.animationName = '';
 
